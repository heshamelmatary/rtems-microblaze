#
#  Timing Test Suite Results for the SH-4 BSP
#

Board:                SH-4 based
CPU:                  SH-4
Clock Speed:          96 MHz
Memory Configuration: SDRAM

Times Reported in:    microseconds
Timer Source:         on-chip

RTEMS Version: ss-20010816

#                          DESCRIPTION                                time
== =================================================================  ====
SEMAPHORES
 1 rtems_semaphore_create                                               19
   rtems_semaphore_delete                                               20
   rtems_semaphore_obtain: available                                     2
   rtems_semaphore_obtain: not available -- NO_WAIT                      2
   rtems_semaphore_release: no waiting tasks                             3
 2 rtems_semaphore_obtain: not available -- caller blocks               18
 3 rtems_semaphore_release: task readied -- preempts caller             18
TASKS
 4 rtems_task_restart: blocked task -- preempts caller                  36
   rtems_task_restart: ready task -- preempts caller                    26
   rtems_semaphore_release: task readied -- returns to caller            5
   rtems_task_create                                                    25
   rtems_task_start                                                     15
   rtems_task_restart: suspended task -- returns to caller              17
   rtems_task_delete: suspended task                                    18
   rtems_task_restart: ready task -- returns to caller                  18
   rtems_task_restart: blocked task -- returns to caller                22
   rtems_task_delete: blocked task                                      19
 5 rtems_task_suspend: calling task                                     13
   rtems_task_resume: task readied -- preempts caller                   12
 6 rtems_task_restart: calling task                                     17
   rtems_task_suspend: returns to caller                                 4
   rtems_task_resume: task readied -- returns to caller                  4
   rtems_task_delete: ready task                                        23
 7 rtems_task_restart: suspended task -- preempts caller                24
TASK MODES
 8 rtems_task_set_priority: obtain current priority                      2
   rtems_task_set_priority: returns to caller                            7
   rtems_task_mode: obtain current mode                                  1
   rtems_task_mode: no reschedule                                        1
   rtems_task_mode: reschedule -- returns to caller                      7
   rtems_task_mode: reschedule -- preempts caller                       21
   rtems_task_set_note                                                   1
   rtems_task_get_note                                                   2
   rtems_clock_set                                                       5
   rtems_clock_get                                                       0
QUEUES
 9 rtems_message_queue_create                                           66
   rtems_message_queue_send: no waiting tasks                            5
   rtems_message_queue_urgent: no waiting tasks                          4
   rtems_message_queue_receive: available                                6
   rtems_message_queue_flush: no messages flushed                        4
   rtems_message_queue_flush: messages flushed                           4
   rtems_message_queue_delete                                           22
10 rtems_message_queue_receive: not available -- NO_WAIT                 4
   rtems_message_queue_receive: not available -- caller blocks          27
11 rtems_message_queue_send: task readied -- preempts caller            19
12 rtems_message_queue_send: task readied -- returns to caller           9
13 rtems_message_queue_urgent: task readied -- preempts caller          18
14 rtems_message_queue_urgent: task readied -- returns to caller         7
EVENTS
15 rtems_event_receive: obtain current events                            0
   rtems_event_receive: not available -- NO_WAIT                         2
   rtems_event_receive: not available -- caller blocks                  19
   rtems_event_send: no task readied                                     2
   rtems_event_receive: available                                        7
   rtems_event_send: task readied -- returns to caller                   6
16 rtems_event_send: task readied -- preempts caller                    19
SCHEDULER
17 rtems_task_set_priority: preempts caller                             22
18 rtems_task_delete: calling task                                      36
SIGNALS
19 rtems_signal_catch                                                    6
   rtems_signal_send: returns to caller                                 11
   rtems_signal_send: signal to self                                    17
   exit ASR overhead: returns to calling task                           14
   exit ASR overhead: returns to preempting task                        13
PARTITIONS
20 rtems_partition_create                                               23
   rtems_region_create                                                  17
   rtems_partition_get_buffer: available                                 8
   rtems_partition_get_buffer: not available                             3
   rtems_partition_return_buffer                                         8
   rtems_partition_delete                                                7
REGIONS
   rtems_region_get_segment: available                                   5
   rtems_region_get_segment: not available -- NO_WAIT                    8
   rtems_region_return_segment: no waiting tasks                         4
   rtems_region_get_segment: not available -- caller blocks             28
   rtems_region_return_segment: task readied -- preempts caller         36
   rtems_region_return_segment: task readied -- returns to caller       14
   rtems_region_delete                                                   7
IO
   rtems_io_initialize                                                   0
   rtems_io_open                                                         0
   rtems_io_close                                                        0
   rtems_io_read                                                         0
   rtems_io_write                                                        0
   rtems_io_control                                                      0
IDENT
21 rtems_task_ident                                                     20
   rtems_message_queue_ident                                            19
   rtems_semaphore_ident                                                21
   rtems_partition_ident                                                19
   rtems_region_ident                                                   20
   rtems_port_ident                                                     19
   rtems_timer_ident                                                    20
   rtems_rate_monotonic_ident                                           20
QUEUE BROADCAST
22 rtems_message_queue_broadcast: task readied -- returns to caller     21
   rtems_message_queue_broadcast: no waiting tasks                       4
   rtems_message_queue_broadcast: task readied -- preempts caller       22
TIMER
23 rtems_timer_create                                                    3
   rtems_timer_fire_after: inactive                                      6
   rtems_timer_fire_after: active                                        5
   rtems_timer_cancel: active                                            3
   rtems_timer_cancel: inactive                                          3
   rtems_timer_reset: inactive                                           5
   rtems_timer_reset: active                                             5
   rtems_timer_fire_when: inactive                                       6
   rtems_timer_fire_when: active                                         6
   rtems_timer_delete: active                                            4
   rtems_timer_delete: inactive                                          3
   rtems_task_wake_when                                                 21
24 rtems_task_wake_after: yield -- returns to caller                     1
   rtems_task_wake_after: yields -- preempts caller                     13
25 rtems_clock_tick                                                      9
ISR & MULTITASKING
26 _ISR_Disable                                                          1
   _ISR_Flash                                                            0
   _ISR_Enable                                                           0
   _Thread_Disable_dispatch                                              0
   _Thread_Enable_dispatch                                               1
   _Thread_Set_state                                                     3
   _Thread_Disptach (NO FP)                                             14
   context switch: no floating point contexts                            7
   context switch: self                                                  1
   context switch: to another task                                       1
   fp context switch: restore 1st FP task                               11
   fp context switch: save idle, restore initialized                     3
   fp context switch: save idle, restore idle                           12
   fp context switch: save initialized, restore initialized              2
   _Thread_Resume                                                        6
   _Thread_Unblock                                                       4
   _Thread_Ready                                                         4
   _Thread_Get                                                           0
   _Semaphore_Get                                                        0
   _Thread_Get: invalid id                                               0
ISR OVERHEAD
27 interrupt entry overhead: returns to interrupted task                11
   interrupt exit overhead: returns to interrupted task                  5
   interrupt entry overhead: returns to nested interrupt                 6
   interrupt exit overhead: returns to nested interrupt                  3
   interrupt entry overhead: returns to preempting task                  7
   interrupt exit overhead: returns to preempting task                  20
DUAL-PORTED MEMORY
28 rtems_port_create                                                     9
   rtems_port_external_to_internal                                       1
   rtems_port_internal_to_external                                       1
   rtems_port_delete                                                    12
MONOTONIC RATE
29 rtems_rate_monotonic_create                                          11
   rtems_rate_monotonic_period: initiate period -- returns to caller    14
   rtems_rate_monotonic_period: obtain status                            7
   rtems_rate_monotonic_cancel                                          12
   rtems_rate_monotonic_delete: inactive                                12
   rtems_rate_monotonic_delete: active                                   9
   rtems_rate_monotonic_period: conclude periods -- caller blocks       18

