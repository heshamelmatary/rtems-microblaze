#
#  Timing Test Suite Results for the Intec SS555
#

Board: SS555
CPU: MPC555
Clock Speed: 40 MHz
Memory Configuration: 512k external 2-1-1-1 SRAM
Wait States: 0

Times Reported in: microseconds
Timer Source: Timebase register (TMBCLK = (4 MHz crystal / 4) = 1.0 Mhz)

#                          DESCRIPTION                                  A	 B
== =================================================================   ====	====

 1 rtems_semaphore_create                                               21
   rtems_semaphore_delete                                               22
   rtems_semaphore_obtain: available                                     7
   rtems_semaphore_obtain: not available -- NO_WAIT                      7
   rtems_semaphore_release: no waiting tasks                            18

 2 rtems_semaphore_obtain: not available -- caller blocks               50

 3 rtems_semaphore_release: task readied -- preempts caller             41

 4 rtems_task_restart: blocked task -- preempts caller                  69
   rtems_task_restart: ready task -- preempts caller                    67
   rtems_semaphore_release: task readied -- returns to caller           23
   rtems_task_create                                                    75
   rtems_task_start                                                     30
   rtems_task_restart: suspended task -- returns to caller              37
   rtems_task_delete: suspended task                                    68
   rtems_task_restart: ready task -- returns to caller                  38
   rtems_task_restart: blocked task -- returns to caller                44
   rtems_task_delete: blocked task                                      70

 5 rtems_task_suspend: calling task                                     40
   rtems_task_resume: task readied -- preempts caller                   35

 6 rtems_task_restart: calling task                                     46
   rtems_task_suspend: returns to caller                                16
   rtems_task_resume: task readied -- returns to caller                 18
   rtems_task_delete: ready task                                        71

 7 rtems_task_restart: suspended task -- preempts caller                64

 8 rtems_task_set_priority: obtain current priority                     13
   rtems_task_set_priority: returns to caller                           24
   rtems_task_mode: obtain current mode                                  4
   rtems_task_mode: no reschedule                                        5
   rtems_task_mode: reschedule -- returns to caller                      7
   rtems_task_mode: reschedule -- preempts caller                       37
   rtems_task_set_note                                                  13
   rtems_task_get_note                                                  13
   rtems_clock_set                                                      27
   rtems_clock_get                                                       1

 9 rtems_message_queue_create                                           34
   rtems_message_queue_send: no waiting tasks                           26
   rtems_message_queue_urgent: no waiting tasks                         26
   rtems_message_queue_receive: available                               24
   rtems_message_queue_flush: no messages flushed                       12
   rtems_message_queue_flush: messages flushed                          15
   rtems_message_queue_delete                                           26

10 rtems_message_queue_receive: not available -- NO_WAIT                15
   rtems_message_queue_receive: not available -- caller blocks          52

11 rtems_message_queue_send: task readied -- preempts caller            47

12 rtems_message_queue_send: task readied -- returns to caller          29

13 rtems_message_queue_urgent: task readied -- preempts caller          46

14 rtems_message_queue_urgent: task readied -- returns to caller        29

15 rtems_event_receive: obtain current events                            1
   rtems_event_receive: not available -- NO_WAIT                        12
   rtems_event_receive: not available -- caller blocks                  44
   rtems_event_send: no task readied                                    13
   rtems_event_receive: available                                       13
   rtems_event_send: task readied -- returns to caller                  21

16 rtems_event_send: task readied -- preempts caller                    41

17 rtems_task_set_priority: preempts caller                             49

18 rtems_task_delete: calling task                                      95

19 rtems_signal_catch                                                   10
   rtems_signal_send: returns to caller                                 15
   rtems_signal_send: signal to self                                    20
   exit ASR overhead: returns to calling task                           15
   exit ASR overhead: returns to preempting task                        30

20 rtems_partition_create                                               25
   rtems_region_create                                                  38
   rtems_partition_get_buffer: available                                14
   rtems_partition_get_buffer: not available                            13
   rtems_partition_return_buffer                                        15
   rtems_partition_delete                                               16
   rtems_region_get_segment: available                                  34
   rtems_region_get_segment: not available -- NO_WAIT                   32
   rtems_region_return_segment: no waiting tasks                        33
   rtems_region_get_segment: not available -- caller blocks             68
   rtems_region_return_segment: task readied -- preempts caller         67
   rtems_region_return_segment: task readied -- returns to caller       48
   rtems_region_delete                                                  30
   rtems_io_initialize                                                   2
   rtems_io_open                                                         1
   rtems_io_close                                                        1
   rtems_io_read                                                         1
   rtems_io_write                                                        1
   rtems_io_control                                                      1

21 rtems_task_ident                                                     25
   rtems_message_queue_ident                                            22
   rtems_semaphore_ident                                                29
   rtems_partition_ident                                                22
   rtems_region_ident                                                   24
   rtems_port_ident                                                     22
   rtems_timer_ident                                                    22
   rtems_rate_monotonic_ident                                           22

22 rtems_message_queue_broadcast: task readied -- returns to caller     33
   rtems_message_queue_broadcast: no waiting tasks                      20
   rtems_message_queue_broadcast: task readied -- preempts caller       50

23 rtems_timer_create                                                   13
   rtems_timer_fire_after: inactive                                     22
   rtems_timer_fire_after: active                                       24
   rtems_timer_cancel: active                                           13
   rtems_timer_cancel: inactive                                         12
   rtems_timer_reset: inactive                                          21
   rtems_timer_reset: active                                            22
   rtems_timer_fire_when: inactive                                      26
   rtems_timer_fire_when: active                                        26
   rtems_timer_delete: active                                           18
   rtems_timer_delete: inactive                                         16
   rtems_task_wake_when                                                 49

24 rtems_task_wake_after: yield -- returns to caller                    10
   rtems_task_wake_after: yields -- preempts caller                     36

25 rtems_clock_tick                                                      8

26 _ISR_Disable                                                          1
   _ISR_Flash                                                            1
   _ISR_Enable                                                           1
   _Thread_Disable_dispatch                                              1
   _Thread_Enable_dispatch                                               7
   _Thread_Set_state                                                     7
   _Thread_Disptach (NO FP)                                             32
   context switch: no floating point contexts                           25
   context switch: self                                                 11
   context switch: to another task                                      12
   fp context switch: restore 1st FP task                               37
   fp context switch: save idle, restore initialized                    34
   fp context switch: save idle, restore idle                           48
   fp context switch: save initialized, restore initialized             34
   _Thread_Resume                                                        7
   _Thread_Unblock                                                       6
   _Thread_Ready                                                         7
   _Thread_Get                                                           4
   _Semaphore_Get                                                        2
   _Thread_Get: invalid id                                               1

27 interrupt entry overhead: returns to interrupted task                13
   interrupt exit overhead: returns to interrupted task                 11
   interrupt entry overhead: returns to nested interrupt                12
   interrupt exit overhead: returns to nested interrupt                 10
   interrupt entry overhead: returns to preempting task                 12
   interrupt exit overhead: returns to preempting task                  38

28 rtems_port_create                                                    16
   rtems_port_external_to_internal                                      11
   rtems_port_internal_to_external                                      11
   rtems_port_delete                                                    16

29 rtems_rate_monotonic_create                                          15
   rtems_rate_monotonic_period: initiate period -- returns to caller    20
   rtems_rate_monotonic_period: obtain status                           12
   rtems_rate_monotonic_cancel                                          15
   rtems_rate_monotonic_delete: inactive                                18
   rtems_rate_monotonic_delete: active                                  20
   rtems_rate_monotonic_period: conclude periods -- caller blocks       36
