#
#  Timing Test Suite Results for the Cogent CSB336 MC9328MXL BSP
#
#  
#

Board:  Cogent CSB336
CPU: MC9328MXL - ARM920T
Clock Speed: 200 MHz
Memory Configuration: SDRAM, 32 bits wide

Times Reported in: microseconds
Timer Source: Timer 2

All tests were compiled with VARIANT=DEBUG
Both instruction and data caches are enabled.


                                             
== ====================================================================  ===
 1 rtems_semaphore_create                                                15
 1 rtems_semaphore_delete                                                15
 1 rtems_semaphore_obtain: available                                     0
 1 rtems_semaphore_obtain: not available -- NO_WAIT                      0
 1 rtems_semaphore_release: no waiting tasks                             0

 2 rtems_semaphore_obtain: not available -- caller blocks                12

 3 rtems_semaphore_release: task readied -- preempts caller              11

 4 rtems_task_restart: blocked task -- preempts caller                   38
 4 rtems_task_restart: ready task -- preempts caller                     29
 4 rtems_semaphore_release: task readied -- returns to caller            5
 4 rtems_task_create                                                     24
 4 rtems_task_start                                                      8
 4 rtems_task_restart: suspended task -- returns to caller               9
 4 rtems_task_delete: suspended task                                     20
 4 rtems_task_restart: ready task -- returns to caller                   10
 4 rtems_task_restart: blocked task -- returns to caller                 11
 4 rtems_task_delete: blocked task                                       21

 5 rtems_task_suspend: calling task                                      9
 5 rtems_task_resume: task readied -- preempts caller                    8

 6 rtems_task_restart: calling task                                      8
 6 rtems_task_suspend: returns to caller                                 3
 6 rtems_task_resume: task readied -- returns to caller                  3
 6 rtems_task_delete: ready task                                         22

 7 rtems_task_restart: suspended task -- preempts caller                 14

 8 rtems_task_set_priority: obtain current priority                      1
 8 rtems_task_set_priority: returns to caller                            3
 8 rtems_task_mode: obtain current mode                                  0
 8 rtems_task_mode: no reschedule                                        0
 8 rtems_task_mode: reschedule -- returns to caller                      3
 8 rtems_task_mode: reschedule -- preempts caller                        13
 8 rtems_task_set_note                                                   1
 8 rtems_task_get_note                                                   1
 8 rtems_clock_set                                                       4
 8 rtems_clock_get                                                       0

 9 rtems_message_queue_create                                            38
 9 rtems_message_queue_send: no waiting tasks                            4
 9 rtems_message_queue_urgent: no waiting tasks                          4
 9 rtems_message_queue_receive: available                                4
 9 rtems_message_queue_flush: no messages flushed                        2
 9 rtems_message_queue_flush: messages flushed                           3
 9 rtems_message_queue_delete                                            19

10 rtems_message_queue_receive: not available -- NO_WAIT                 2
10 rtems_message_queue_receive: not available -- caller blocks           12

11 rtems_message_queue_send: task readied -- preempts caller             13

12 rtems_message_queue_send: task readied -- returns to caller           7

13 rtems_message_queue_urgent: task readied -- preempts caller           13

14 rtems_message_queue_urgent: task readied -- returns to caller         7

15 rtems_event_receive: obtain current events                            0
15 rtems_event_receive: not available -- NO_WAIT                         1
15 rtems_event_receive: not available -- caller blocks                   11
15 rtems_event_send: no task readied                                     1
15 rtems_event_receive: available                                        3
15 rtems_event_send: task readied -- returns to caller                   7

16 rtems_event_send: task readied -- preempts caller                     12

17 rtems_task_set_priority: preempts caller                              13

18 rtems_task_delete: calling task                                       26

19 rtems_signal_catch                                                    5
19 rtems_signal_send: returns to caller                                  12
19 rtems_signal_send: signal to self                                     19
19 exit ASR overhead: returns to calling task                            7
19 exit ASR overhead: returns to preempting task                         10

20 rtems_partition_create                                                21
20 rtems_region_create                                                   33
20 rtems_partition_get_buffer: available                                 9
20 rtems_partition_get_buffer: not available                             3
20 rtems_partition_return_buffer                                         8
20 rtems_partition_delete                                                8
20 rtems_region_get_segment: available                                   7
20 rtems_region_get_segment: not available -- NO_WAIT                    7
20 rtems_region_return_segment: no waiting tasks                         6
20 rtems_region_get_segment: not available -- caller blocks              36
20 rtems_region_return_segment: task readied -- preempts caller          33                                                 
20 rtems_region_return_segment: task readied -- returns to caller        13
20 rtems_region_delete                                                   18
20 rtems_io_initialize                                                   0
20 rtems_io_open                                                         0
20 rtems_io_close                                                        0
20 rtems_io_read                                                         0
20 rtems_io_write                                                        0
20 rtems_io_control                                                      0

21 rtems_task_ident                                                      8
21 rtems_message_queue_ident                                             8
21 rtems_semaphore_ident                                                 9
21 rtems_partition_ident                                                 8
21 rtems_region_ident                                                    8
21 rtems_port_ident                                                      8
21 rtems_timer_ident                                                     8
21 rtems_rate_monotonic_ident                                            8

22 rtems_message_queue_broadcast: task readied -- returns to caller      27
22 rtems_message_queue_broadcast: no waiting tasks                       2
22 rtems_message_queue_broadcast: task readied -- preempts caller        16

23 rtems_timer_create                                                    3
23 rtems_timer_fire_after: inactive                                      4
23 rtems_timer_fire_after: active                                        4
23 rtems_timer_cancel: active                                            2
23 rtems_timer_cancel: inactive                                          1
23 rtems_timer_reset: inactive                                           3
23 rtems_timer_reset: active                                             3
23 rtems_timer_fire_when: inactive                                       4
23 rtems_timer_fire_when: active                                         4
23 rtems_timer_delete: active                                            3
23 rtems_timer_delete: inactive                                          3
23 rtems_task_wake_when                                                  12

24 rtems_task_wake_after: yield -- returns to caller                     1
24 rtems_task_wake_after: yields -- preempts caller                      9

25 rtems_clock_tick                                                      10

26 _ISR_Disable                                                          3
26 _ISR_Flash                                                            1
26 _ISR_Enable                                                           0
26 _Thread_Disable_dispatch                                              1
26 _Thread_Enable_dispatch                                               3
26 _Thread_Set_state                                                     6
26 _Thread_Disptach (NO FP)                                              9
26 context switch: no floating point contexts                            7
26 context switch: self                                                  1
26 context switch: to another task                                       2
26 fp context switch: restore 1st FP task -                              NA
26 fp context switch: save idle, restore initialized -                   NA
26 fp context switch: save idle, restore idle -                          NA
26 fp context switch: save initialized, restore initialized -            NA
26 _Thread_Resume                                                        8
26 _Thread_Unblock                                                       7
26 _Thread_Ready                                                         4
26 _Thread_Get                                                           0
26 _Semaphore_Get                                                        0
26 _Thread_Get: invalid id                                               0

27 interrupt entry overhead: returns to interrupted task                 0
27 interrupt exit overhead: returns to interrupted task                  1
27 interrupt entry overhead: returns to nested interrupt                 0
27 interrupt exit overhead: returns to nested interrupt                  0

28 rtems_port_create                                                     10
28 rtems_port_external_to_internal                                       1
28 rtems_port_internal_to_external                                       1
28 rtems_port_delete                                                     8

29 rtems_rate_monotonic_create                                           12
29 rtems_rate_monotonic_period: initiate period -- returns to caller     17
29 rtems_rate_monotonic_period: obtain status                            3
29 rtems_rate_monotonic_cancel                                           12
29 rtems_rate_monotonic_delete: inactive                                 12
29 rtems_rate_monotonic_delete: active                                   4
29 rtems_rate_monotonic_period: conclude periods -- caller blocks        9
