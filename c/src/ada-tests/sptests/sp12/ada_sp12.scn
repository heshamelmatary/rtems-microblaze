*** TEST 12 ***
INIT - Forward priority queue test
PRI1 - semaphore_obtain - wait forever on SM2
PRI2 - semaphore_obtain - wait forever on SM2
PRI3 - semaphore_obtain - wait forever on SM2
PRI4 - semaphore_obtain - wait forever on SM2
PRI5 - semaphore_obtain - wait forever on SM2
INIT - Backward priority queue test
PRI5 - semaphore_obtain - wait forever on SM2
PRI4 - semaphore_obtain - wait forever on SM2
PRI3 - semaphore_obtain - wait forever on SM2
PRI2 - semaphore_obtain - wait forever on SM2
PRI1 - semaphore_obtain - wait forever on SM2
<pause> 
INIT - Binary Semaphore and Priority Inheritance Test
INIT - semaphore_create - allocated binary semaphore
INIT - semaphore_release - allocated binary semaphore
INIT - semaphore_delete - allocated binary semaphore
PRI5 - semaphore_obtain - wait forever on SM2
PRI5 - task_suspend - until all priority tasks blocked
PDRV - priority of PRI5 is          67
PRI4 - semaphore_obtain - wait forever on SM2
PDRV - change priority of PRI5 from          67 to          68
PDRV - priority of PRI5 is          67
PRI3 - semaphore_obtain - wait forever on SM2
PDRV - priority of PRI5 is          67
PRI2 - semaphore_obtain - wait forever on SM2
PDRV - priority of PRI5 is          66
PRI1 - semaphore_obtain - wait forever on SM2
PDRV - priority of PRI5 is          65
PDRV - task_resume - PRI5
PRI5 - task_delete - all tasks waiting on SM2
PRI5 - semaphore_obtain - nested
PRI5 - semaphore_release - nested
PRI5 - semaphore_release - restore priority
PRI5 - priority of PRI5 is          68
<pause> 
TA1 - semaphore_ident - smid => 16#1A010009#
TA1 - semaphore_obtain - wait forever on SM2
TA1 - got SM2
TA1 - semaphore_obtain - wait forever on SM3
TA1 - got SM3
TA1 - semaphore_obtain - get SM1 - NO_WAIT
TA1 - got SM1
TA1 - task_wake_after - sleep 5 seconds
TA2 - semaphore_obtain - wait forever on SM1
TA3 - semaphore_obtain - wait forever on SM2
<pause> 
TA1 - semaphore_release - release SM1
TA1 - semaphore_obtain - waiting for SM1 with 10 second timeout
TA2 - got SM1
TA2 - semaphore_release - release SM1
TA2 - task_set_priority - make self highest priority task
TA2 - semaphore_obtain - wait forever on SM2
TA1 - got SM1
TA1 - semaphore_release - release SM2
TA2 - got SM2
TA2 - semaphore_release - release SM2
TA2 - task_delete - delete self
TA1 - task_wake_after - sleep 5 seconds
TA3 - got SM2
TA3 - semaphore_release - release SM2
TA3 - semaphore_obtain - wait forever on SM3
<pause> 
TA1 - task_delete - delete TA3
TA1 - task_wake_after - sleep 5 seconds
TA4 - semaphore_obtain - wait forever on SM1
TA5 - semaphore_obtain - wait forever on SM1
TA1 - task_delete - delete TA4
TA1 - semaphore_release - release SM1
TA1 - task_wake_after - sleep 5 seconds
TA5 - got SM1
TA5 - semaphore_obtain - wait forever on SM1
TA1 - semaphore_delete - delete SM1
TA1 - semaphore_delete - delete SM3
TA1 - task_delete - delete self
TA5 - SM1 deleted by TA1
*** END OF TEST 12 ***
