The tests were designed to operate in a very controlled environment.  If
one uses interrupt-driven console output, then tasks will block unexpectedly 
when a buffer filles and interrupts will perturb with the task execution order.

The tmtests should only be run with all interrupt sources disabled using
polled IO.

The following is a list of reported failures from running the tests on
a board with interrupt driven console IO.  These problems do not 
occur when using polled IO.

tm03, tm04, tm05, tm07, tm11, tm12, tm13, tm14, tm15, tm16, tm17,  
tm19, tm22, tm23, tm24 - All hit my breakpoint at  
_Internal_error_Occurred.

tm20, tm27 - hang in middle of tests.
tm26 - hangs at end of tests.

sp02 - Gets through some tests, then attempts to execute code at  
location 0.
sp04 - hangs at end of tests.
sp06 - rtems_task_restart of TA3 FAILED -- expected (0) got (4)
sp07, sp14 - hang in middle of tests
sp13, sp15 - terminate properly, but output at end is missing.
sp16 - _Internal_error_Occurred.
sp19 - rtems_clock_get FAILED -- expected (0) got (11), and hangs in  
middle of test.

cpuuse - hangs in middle of tests
malloctest - prints nothing

psx05 - Init: pthread_mutex_init - EINVAL (bad protocol)
../../../../../../../src/rtems-981001/c/src/tests/psxtests/psx05/../../../../../
../../src/rtems-981001/c/src/tests/psxtests/psx05/task.c:35:  
failed assertion `status == EBUSY'
N\: pthread_mutex_init - EINVAL (bad priority ceiling)


